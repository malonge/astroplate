---
import Base from "@/layouts/Base.astro";
import cvData from "@/config/cv.json";

// Format date for display
function formatDate(dateString: string): string {
  if (dateString === "Present") return "Present";
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' });
}

// Calculate duration between dates
function calculateDuration(startDate: string, endDate: string): string {
  if (endDate === "Present") return "Present";
  const start = new Date(startDate);
  const end = new Date(endDate);
  const diffTime = Math.abs(end.getTime() - start.getTime());
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  const years = Math.floor(diffDays / 365);
  const months = Math.floor((diffDays % 365) / 30);
  
  if (years > 0 && months > 0) {
    return `${years}y ${months}m`;
  } else if (years > 0) {
    return `${years}y`;
  } else {
    return `${months}m`;
  }
}

// Get profile URL by network name
function getProfileUrl(network: string): string | null {
  const profile = cvData.basics.profiles?.find(p => p.network.toLowerCase() === network.toLowerCase());
  return profile?.url || null;
}
---

<Base title="CV - Professional Resume">
  <main class="container mx-auto px-4 py-8 max-w-4xl">
    <!-- Header with download button -->
    <div class="flex justify-between items-start mb-8">
      <div>
        <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-2">
          {cvData.basics.name}
        </h1>
        <p class="text-xl text-gray-600 dark:text-gray-300 mb-4">
          {cvData.basics.label}
        </p>
      </div>
      <a
        href="/cv.pdf"
        download
        class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors duration-200 flex items-center gap-2"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
        </svg>
        Download PDF
      </a>
    </div>

    <!-- Contact Information -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8 text-sm text-gray-600 dark:text-gray-300">
      <div class="flex items-center gap-2">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
        </svg>
        <a href={`mailto:${cvData.basics.email}`} class="hover:text-blue-600">{cvData.basics.email}</a>
      </div>
      <div class="flex items-center gap-2">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
        </svg>
        <span>{cvData.basics.phone}</span>
      </div>
      <div class="flex items-center gap-2">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
        </svg>
        <span>{cvData.basics.location.city}, {cvData.basics.location.region}</span>
      </div>
      <div class="flex items-center gap-2">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"></path>
        </svg>
        <a href={cvData.basics.url} target="_blank" rel="noopener noreferrer" class="hover:text-blue-600">{cvData.basics.url}</a>
      </div>
    </div>

    <!-- Social Links -->
    <div class="flex gap-4 mb-8">
      {getProfileUrl('linkedin') && (
        <a href={getProfileUrl('linkedin')} target="_blank" rel="noopener noreferrer" class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300">
          LinkedIn
        </a>
      )}
      {getProfileUrl('github') && (
        <a href={getProfileUrl('github')} target="_blank" rel="noopener noreferrer" class="text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white">
          GitHub
        </a>
      )}
    </div>

    <!-- Professional Summary -->
    <section class="mb-8">
      <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
        Professional Summary
      </h2>
      <p class="text-gray-700 dark:text-gray-300 leading-relaxed">
        {cvData.basics.summary}
      </p>
    </section>

    <!-- Professional Experience -->
    <section class="mb-8">
      <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
        Professional Experience
      </h2>
      <div class="space-y-6">
        {cvData.work?.map((job, index) => (
          <div key={index} class="border-l-4 border-blue-500 pl-4">
            <div class="flex justify-between items-start mb-2">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                {job.position}
              </h3>
              <span class="text-sm text-gray-500 dark:text-gray-400">
                {formatDate(job.startDate)} - {formatDate(job.endDate)}
              </span>
            </div>
            <div class="flex justify-between items-start mb-2">
              <p class="text-md font-medium text-gray-700 dark:text-gray-300">
                {job.name}
              </p>
              <span class="text-sm text-gray-500 dark:text-gray-400">
                {calculateDuration(job.startDate, job.endDate)}
              </span>
            </div>
            <p class="text-gray-700 dark:text-gray-300 mb-3">
              {job.summary}
            </p>
            <ul class="list-disc list-inside space-y-1 text-sm text-gray-700 dark:text-gray-300">
              {job.highlights?.map((highlight, highlightIndex) => (
                <li key={highlightIndex}>{highlight}</li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </section>

    <!-- Volunteer Experience -->
    {cvData.volunteer && cvData.volunteer.length > 0 && (
      <section class="mb-8">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
          Volunteer Experience
        </h2>
        <div class="space-y-6">
          {cvData.volunteer.map((volunteer, index) => (
            <div key={index} class="border-l-4 border-green-500 pl-4">
              <div class="flex justify-between items-start mb-2">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                  {volunteer.position}
                </h3>
                <span class="text-sm text-gray-500 dark:text-gray-400">
                  {formatDate(volunteer.startDate)} - {formatDate(volunteer.endDate)}
                </span>
              </div>
              <p class="text-md font-medium text-gray-700 dark:text-gray-300 mb-1">
                {volunteer.organization}
              </p>
              <p class="text-gray-700 dark:text-gray-300 mb-3">
                {volunteer.summary}
              </p>
              <ul class="list-disc list-inside space-y-1 text-sm text-gray-700 dark:text-gray-300">
                {volunteer.highlights?.map((highlight, highlightIndex) => (
                  <li key={highlightIndex}>{highlight}</li>
                ))}
              </ul>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- Education -->
    <section class="mb-8">
      <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
        Education
      </h2>
      <div class="space-y-4">
        {cvData.education?.map((edu, index) => (
          <div key={index} class="border-l-4 border-green-500 pl-4">
            <div class="flex justify-between items-start mb-2">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                {edu.studyType} in {edu.area}
              </h3>
              <span class="text-sm text-gray-500 dark:text-gray-400">
                {formatDate(edu.startDate)} - {formatDate(edu.endDate)}
              </span>
            </div>
            <p class="text-md font-medium text-gray-700 dark:text-gray-300 mb-1">
              {edu.institution}
            </p>
            {edu.score && (
              <p class="text-sm text-gray-600 dark:text-gray-400 mb-2">
                GPA: {edu.score}
              </p>
            )}
            {edu.courses && edu.courses.length > 0 && (
              <div>
                <p class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Relevant Coursework:</p>
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  {edu.courses.join(", ")}
                </p>
              </div>
            )}
          </div>
        ))}
      </div>
    </section>

    <!-- Awards -->
    {cvData.awards && cvData.awards.length > 0 && (
      <section class="mb-8">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
          Awards & Recognition
        </h2>
        <div class="space-y-4">
          {cvData.awards.map((award, index) => (
            <div key={index} class="border-l-4 border-yellow-500 pl-4">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1">
                {award.title}
              </h3>
              <p class="text-md font-medium text-gray-700 dark:text-gray-300 mb-1">
                {award.awarder}
              </p>
              <p class="text-sm text-gray-500 dark:text-gray-400 mb-2">
                {formatDate(award.date)}
              </p>
              <p class="text-gray-700 dark:text-gray-300">
                {award.summary}
              </p>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- Certificates -->
    {cvData.certificates && cvData.certificates.length > 0 && (
      <section class="mb-8">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
          Certifications
        </h2>
        <div class="space-y-4">
          {cvData.certificates.map((cert, index) => (
            <div key={index} class="border-l-4 border-purple-500 pl-4">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1">
                {cert.name}
              </h3>
              <p class="text-md font-medium text-gray-700 dark:text-gray-300 mb-1">
                {cert.issuer}
              </p>
              <p class="text-sm text-gray-500 dark:text-gray-400 mb-2">
                {formatDate(cert.date)}
              </p>
              {cert.url && (
                <a href={cert.url} target="_blank" rel="noopener noreferrer" class="text-blue-600 hover:text-blue-800 text-sm">
                  View Certificate
                </a>
              )}
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- Publications -->
    {cvData.publications && cvData.publications.length > 0 && (
      <section class="mb-8">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
          Publications
        </h2>
        <div class="space-y-4">
          {cvData.publications.map((pub, index) => (
            <div key={index} class="border-l-4 border-indigo-500 pl-4">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1">
                {pub.name}
              </h3>
              <p class="text-md font-medium text-gray-700 dark:text-gray-300 mb-1">
                {pub.publisher}
              </p>
              <p class="text-sm text-gray-500 dark:text-gray-400 mb-2">
                {formatDate(pub.releaseDate)}
              </p>
              <p class="text-gray-700 dark:text-gray-300 mb-2">
                {pub.summary}
              </p>
              {pub.url && (
                <a href={pub.url} target="_blank" rel="noopener noreferrer" class="text-blue-600 hover:text-blue-800 text-sm">
                  Read Publication
                </a>
              )}
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- Skills -->
    <section class="mb-8">
      <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
        Skills
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {cvData.skills?.map((skillGroup, index) => (
          <div key={index}>
            <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">
              {skillGroup.name} <span class="text-sm text-gray-500 dark:text-gray-400">({skillGroup.level})</span>
            </h3>
            <div class="flex flex-wrap gap-2">
              {skillGroup.keywords.map((skill, skillIndex) => (
                <span key={skillIndex} class="bg-blue-100 text-blue-800 text-sm px-3 py-1 rounded-full dark:bg-blue-900 dark:text-blue-200">
                  {skill}
                </span>
              ))}
            </div>
          </div>
        ))}
      </div>
    </section>

    <!-- Projects -->
    {cvData.projects && cvData.projects.length > 0 && (
      <section class="mb-8">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
          Projects
        </h2>
        <div class="space-y-4">
          {cvData.projects.map((project, index) => (
            <div key={index} class="border-l-4 border-purple-500 pl-4">
              <div class="flex justify-between items-start mb-2">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                  {project.name}
                </h3>
                <span class="text-sm text-gray-500 dark:text-gray-400">
                  {formatDate(project.startDate)} - {formatDate(project.endDate)}
                </span>
              </div>
              <p class="text-gray-700 dark:text-gray-300 mb-3">
                {project.description}
              </p>
              <ul class="list-disc list-inside space-y-1 text-sm text-gray-700 dark:text-gray-300 mb-2">
                {project.highlights?.map((highlight, highlightIndex) => (
                  <li key={highlightIndex}>{highlight}</li>
                ))}
              </ul>
              {project.url && (
                <a href={project.url} target="_blank" rel="noopener noreferrer" class="text-blue-600 hover:text-blue-800 text-sm">
                  View Project
                </a>
              )}
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- Languages -->
    {cvData.languages && cvData.languages.length > 0 && (
      <section class="mb-8">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
          Languages
        </h2>
        <div class="flex flex-wrap gap-4">
          {cvData.languages.map((lang, index) => (
            <div key={index} class="flex items-center gap-2">
              <span class="font-medium text-gray-900 dark:text-white">{lang.language}</span>
              <span class="text-sm text-gray-500 dark:text-gray-400">({lang.fluency})</span>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- Interests -->
    {cvData.interests && cvData.interests.length > 0 && (
      <section class="mb-8">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
          Interests
        </h2>
        <div class="space-y-4">
          {cvData.interests.map((interest, index) => (
            <div key={index}>
              <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">
                {interest.name}
              </h3>
              <p class="text-gray-700 dark:text-gray-300">
                {interest.keywords.join(", ")}
              </p>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- References -->
    {cvData.references && cvData.references.length > 0 && (
      <section class="mb-8">
        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 border-b border-gray-200 dark:border-gray-700 pb-2">
          References
        </h2>
        <div class="space-y-4">
          {cvData.references.map((ref, index) => (
            <div key={index} class="border-l-4 border-gray-500 pl-4">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1">
                {ref.name}
              </h3>
              <p class="text-gray-700 dark:text-gray-300">
                {ref.reference}
              </p>
            </div>
          ))}
        </div>
      </section>
    )}
  </main>
</Base>
